body {
  margin: 0;
  font-family: 'Work Sans', sans-serif;
  display: flex;
  flex-direction: row;
  background: white;
  height: 100vh;
  line-height: 1.5em;
}

p {
/*  font-size: 1em;*/
}

#map {
  height: 100vh;
  width: 100vw;
  display: flex;
  padding: 0;
  margin: 0;
  font-family: 'Work Sans', sans-serif;
}

#map:nth-child(1n+0) {
  font-size: 1.1em;
  line-height: 1.4em;
}

/* styling the sidebar */

#sidebarleft {
  display: flex;
  flex-direction: column;
  max-height: 100vh;
  min-width: 5em;
  max-width: 15em;
  left: 0;
  padding: 0;
  margin: 0;
  background: white;
  color: blue;
  box-shadow: 0px 0px 20px 0px rgba(0,0,0,0.5);
  z-index: 2;
  transition: all 500ms ease;
}

#sidebarright {
  display: flex;
  max-width: 20em;
  height: 100vh;
  margin: 0;
  padding: 1em;
  background: white;
  color: blue;
  flex-direction: column;
  box-shadow: 0px 0px 20px 0px rgba(0,0,0,0.5);
  z-index: 1;
  transition: all 500ms ease;
}

/* left sidebar */

#menu {
  display: block;
  padding: 1em;
  flex-direction: column;
  /* height: 35vh; */
  height: 100vh;
  overflow-y: auto;
}

#menu a {
  text-decoration: none;
  display: flex;
  color: blue;
}

#menu a.active {
  color: red;
  display: flex;
}

/* right side bar */

#content {
  display: flex;
  height: 70vh;
  margin-bottom: 2em;
  padding-top: 2em;
  overflow-y: auto;
}

#legend {
  display: flex;
  height: 30vh;
  overflow-y: auto;
}

/* loading spinner */

@keyframes spinner {
  to {transform: rotate(360deg);}
}

.spinner,
.spinner:before {
  width: 20px;
  height: 20px;
  box-sizing: border-box;
  position: relative;
  float: left;
  top: -50%;
  left: 50%;
  margin-top: -10px;
  margin-left: -10px;
}

.spinner:before {
  content: '';
  display: block;
  border-radius: 50%;
  border: 2px solid transparent;
  border-top-color: #00f;
  border-right-color: #00f;
  animation: spinner .4s linear infinite;
}

/* Spinner animations */

.spinner-add,
.spinner-remove {
  animation-fill-mode: both;
  animation-duration: .4s;
}

.spinner-add {
  animation-name: spinner-add;
}

@keyframes spinner-add {
  from {transform: scale(0);}
  to {transform: scale(1);}
}

.spinner-remove {
  animation-name: spinner-remove;
}

@keyframes spinner-remove {
  to {transform: scale(0);}
}

/* popup content div */
div.mapboxgl-popup {
  left:   23.4em
}

div.mapboxgl-popup-content {
  font-size: 1em;
  font-family: 'Work Sans', sans-serif;
  border-radius: none;
  padding: 1.5em;
}

div.mapboxgl-popup-content, #content div.contentCard{
  width: 20em;
  max-width: 70vw;
  max-height: 80vh;
  overflow-y: auto;
}

.mapboxgl-popup-content img, #content div.contentCard img {
  height: auto;
  width: 100%;
}
 /* Styling the coordinates of draggable point */

.coordinates {
    background: rgba(0,0,0,0.5);
    color: #fff;
    position: absolute;
    bottom: 10px;
    left: 10px;
    padding:5px 10px;
    margin: 0;
    font-size: 11px;
    line-height: 18px;
    border-radius: 3px;
    display: none;
}

/* Submit form */
#usernote {
}

textarea {
    width: 98%;
    height: 25em;
    resize: none;
/*    border: solid;
    border-width: thin;
    border-color: gainsboro;*/
    border: none;
    font-family: 'Work Sans', sans-serif;
    font-size: 1em;
}

.submit {
    width: 30%;
    border: solid;
    border-width: thin;
    border-color: black;
    border-radius: none;
    margin-top: 2em;
    font-size: 1em;
}

#coordinates {
  /* visibility: hidden; */
}

.mapboxgl-sidebar-close-button {
    position: relative;
    top: 20px;
    right: 20px;
    float: right;
    color: black;
    background: none;
    border: none;
    cursor: pointer !important;
    user-select: none;
    outline: none !important;
}



/* Styling for legends */

.contentCard ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

.contentCard li {
  padding-left: 1em;
  text-indent: -.7em;
}

.contentCard li::before {
  content: "â€¢";
  font-size: 3em;
  position: relative;
  bottom:   -0.22em;
  line-height: 0.1em;
  padding-right: 7px;
}

.contentCard li:nth-of-type(1n)::before {
  color: green
}

.contentCard li:nth-of-type(2n)::before {
  color: brown
}

.contentCard li:nth-of-type(3n)::before {
  color: blue
}

.contentCard li:nth-of-type(4n)::before {
  color: orange
}

.contentCard li:nth-of-type(5n)::before {
  color: yellow
}

.contentCard li:nth-of-type(6n)::before {
  color: purple
}
